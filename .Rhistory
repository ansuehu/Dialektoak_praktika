distantzia <- bilbao_d(strsplit(datubasea[galdera, i], ",")[[1]], strsplit(datubasea[galdera, j], ",")[[1]])
print(distantzia)
}
pisuak <- membership[i, c1] * membership[j, c2]
pisuen_batura <- pisuen_batura + pisuak
batura <- batura + distantzia * pisuak
}
}
return(batura / pisuen_batura)
}
kalkulatu_diferentziazioa <- function(datubasea, membership, galdera, cluster1, cluster2) {
estabilitatea1 <- kalkulatu_estabilitatea(datubasea, membership, galdera, cluster1)
estabilitatea2 <- kalkulatu_estabilitatea(datubasea, membership, galdera, cluster2)
bariabilitatea1_2 <- kalkulatu_bariabilitatea(datubasea, membership, galdera, cluster1, cluster2)
return(bariabilitatea1_2 / max(estabilitatea1, estabilitatea2, 1e-6))
}
c1 <- 1
c1 <- 1
c2 <- 2
indices1 <- which(clusters == c1)
indices2 <- which(clusters == c2)
cluster1 <- list(c1, indices)
cluster2 <- list(c2, indices)
kalkulatu_estabilitatea(datubase_matrix, membership, 4, cluster1, cluster2)
c1 <- 1
c2 <- 2
indices1 <- which(clusters == c1)
indices2 <- which(clusters == c2)
cluster1 <- list(c1, indices1)
cluster2 <- list(c2, indices2)
kalkulatu_estabilitatea(datubase_matrix, membership, 4, cluster1)
kalkulatu_estabilitatea(datubase_matrix, membership, 4, cluster1, cluster2)
indices1
print(i)
for (i in indices1) {
print(i)
}
indices2[0]
indices2[1]
indices2[2]
indices2[3]
indices2[4]
indices1[1,]
indices1[1]
indices1[:]
indices1[1:]
indices1[1:5]
indices1[1:length(indices1)]
indices1[2:length(indices1)]
indices1[3:length(indices1)]
kalkulatu_estabilitatea <- function(datubasea, membership, galdera, cluster) {
c <- cluster[[1]]
elementuak <- cluster[[2]]
n <- length(elementuak)
batura <- 0
pisuen_batura <- 0
for (i in elementuak) {
for (j in elementuak[i+1:n]) {
if (datubasea[galdera, i]=="" || datubasea[galdera, j]=="") {
distantzia <- 1
} else {
distantzia <- bilbao_d(strsplit(datubasea[galdera, i], ",")[[1]], strsplit(datubasea[galdera, j], ",")[[1]])
}
pisuak <- membership[i, c] * membership[j, c]
pisuen_batura <- pisuen_batura + pisuak
batura <- batura + distantzia * pisuak
}
}
return(batura * 2 / pisuen_batura)
}
kalkulatu_bariabilitatea <- function(datubasea, membership, galdera, cluster1, cluster2) {
c1 <- cluster1[[1]]
elementuak1 <- cluster1[[2]]
n1 <- length(elementuak1)
c2 <- cluster2[[1]]
elementuak2 <- cluster2[[2]]
n2 <- length(elementuak2)
batura <- 0
pisuen_batura <- 0
for (i in elementuak1) {
for (j in elementuak2) {
if (datubasea[galdera, i]=="" || datubasea[galdera, j]=="") {
distantzia <- 1
} else {
distantzia <- bilbao_d(strsplit(datubasea[galdera, i], ",")[[1]], strsplit(datubasea[galdera, j], ",")[[1]])
print(distantzia)
}
pisuak <- membership[i, c1] * membership[j, c2]
pisuen_batura <- pisuen_batura + pisuak
batura <- batura + distantzia * pisuak
}
}
return(batura / pisuen_batura)
}
kalkulatu_estabilitatea <- function(datubasea, membership, galdera, cluster) {
c <- cluster[[1]]
elementuak <- cluster[[2]]
n <- length(elementuak)
batura <- 0
pisuen_batura <- 0
for (i in elementuak) {
for (j in elementuak[i+1:n]) {
if (datubasea[galdera, i]=="" || datubasea[galdera, j]=="") {
distantzia <- 1
} else {
distantzia <- bilbao_d(strsplit(datubasea[galdera, i], ",")[[1]], strsplit(datubasea[galdera, j], ",")[[1]])
}
pisuak <- membership[i, c] * membership[j, c]
pisuen_batura <- pisuen_batura + pisuak
batura <- batura + distantzia * pisuak
}
}
return(batura * 2 / pisuen_batura)
}
kalkulatu_estabilitatea <- function(datubasea, membership, galdera, cluster) {
c <- cluster[[1]]
elementuak <- cluster[[2]]
n <- length(elementuak)
batura <- 0
pisuen_batura <- 0
for (i in elementuak) {
for (j in elementuak[i+1:n]) {
if (datubasea[galdera, i]=="" || datubasea[galdera, j]=="") {
distantzia <- 1
} else {
distantzia <- bilbao_d(strsplit(datubasea[galdera, i], ",")[[1]], strsplit(datubasea[galdera, j], ",")[[1]])
}
pisuak <- membership[i, c] * membership[j, c]
pisuen_batura <- pisuen_batura + pisuak
batura <- batura + distantzia * pisuak
}
}
return(batura * 2 / pisuen_batura)
}
kalkulatu_bariabilitatea <- function(datubasea, membership, galdera, cluster1, cluster2) {
c1 <- cluster1[[1]]
elementuak1 <- cluster1[[2]]
n1 <- length(elementuak1)
c2 <- cluster2[[1]]
elementuak2 <- cluster2[[2]]
n2 <- length(elementuak2)
batura <- 0
pisuen_batura <- 0
for (i in elementuak1) {
for (j in elementuak2) {
if (datubasea[galdera, i]=="" || datubasea[galdera, j]=="") {
distantzia <- 1
} else {
distantzia <- bilbao_d(strsplit(datubasea[galdera, i], ",")[[1]], strsplit(datubasea[galdera, j], ",")[[1]])
}
pisuak <- membership[i, c1] * membership[j, c2]
pisuen_batura <- pisuen_batura + pisuak
batura <- batura + distantzia * pisuak
}
}
return(batura / pisuen_batura)
}
kalkulatu_diferentziazioa <- function(datubasea, membership, galdera, cluster1, cluster2) {
estabilitatea1 <- kalkulatu_estabilitatea(datubasea, membership, galdera, cluster1)
estabilitatea2 <- kalkulatu_estabilitatea(datubasea, membership, galdera, cluster2)
bariabilitatea1_2 <- kalkulatu_bariabilitatea(datubasea, membership, galdera, cluster1, cluster2)
return(bariabilitatea1_2 / max(estabilitatea1, estabilitatea2, 1e-6))
}
c1 <- 1
c2 <- 2
indices1 <- which(clusters == c1)
indices2 <- which(clusters == c2)
cluster1 <- list(c1, indices1)
cluster2 <- list(c2, indices2)
kalkulatu_estabilitatea(datubase_matrix, membership, 4, cluster1)
kalkulatu_estabilitatea <- function(datubasea, membership, galdera, cluster) {
c <- cluster[[1]]
elementuak <- cluster[[2]]
n <- length(elementuak)
batura <- 0
pisuen_batura <- 0
for (i in elementuak) {
for (j in elementuak[i+1:n]) {
print(datubasea[galdera, i])
if (datubasea[galdera, i]=="" || datubasea[galdera, j]=="") {
distantzia <- 1
} else {
distantzia <- bilbao_d(strsplit(datubasea[galdera, i], ",")[[1]], strsplit(datubasea[galdera, j], ",")[[1]])
}
pisuak <- membership[i, c] * membership[j, c]
pisuen_batura <- pisuen_batura + pisuak
batura <- batura + distantzia * pisuak
}
}
return(batura * 2 / pisuen_batura)
}
kalkulatu_estabilitatea(datubase_matrix, membership, 4, cluster1)
print(datubasea[galdera, i][1])
kalkulatu_estabilitatea <- function(datubasea, membership, galdera, cluster) {
c <- cluster[[1]]
elementuak <- cluster[[2]]
n <- length(elementuak)
batura <- 0
pisuen_batura <- 0
for (i in elementuak) {
for (j in elementuak[i+1:n]) {
print(datubasea[galdera, i][1])
if (datubasea[galdera, i]=="" || datubasea[galdera, j]=="") {
distantzia <- 1
} else {
distantzia <- bilbao_d(strsplit(datubasea[galdera, i], ",")[[1]], strsplit(datubasea[galdera, j], ",")[[1]])
}
pisuak <- membership[i, c] * membership[j, c]
pisuen_batura <- pisuen_batura + pisuak
batura <- batura + distantzia * pisuak
}
}
return(batura * 2 / pisuen_batura)
}
kalkulatu_estabilitatea(datubase_matrix, membership, 4, cluster1)
kalkulatu_estabilitatea <- function(datubasea, membership, galdera, cluster) {
c <- cluster[[1]]
elementuak <- cluster[[2]]
n <- length(elementuak)
batura <- 0
pisuen_batura <- 0
for (i in elementuak) {
for (j in elementuak[i+1:n]) {
print(c(datubasea[galdera, i][1], datubasea[galdera, j]))
if (datubasea[galdera, i]=="" || datubasea[galdera, j]=="") {
distantzia <- 1
} else {
distantzia <- bilbao_d(strsplit(datubasea[galdera, i], ",")[[1]], strsplit(datubasea[galdera, j], ",")[[1]])
}
pisuak <- membership[i, c] * membership[j, c]
pisuen_batura <- pisuen_batura + pisuak
batura <- batura + distantzia * pisuak
}
}
return(batura * 2 / pisuen_batura)
}
kalkulatu_estabilitatea(datubase_matrix, membership, 4, cluster1)
View(datubase_matrix)
kalkulatu_estabilitatea <- function(datubasea, membership, galdera, cluster) {
c <- cluster[[1]]
elementuak <- cluster[[2]]
n <- length(elementuak)
batura <- 0
pisuen_batura <- 0
for (i in elementuak) {
for (j in elementuak[i+1:n]) {
print(c(i,j))
print(c(datubasea[galdera, i][1], datubasea[galdera, j]))
if (datubasea[galdera, i]=="" || datubasea[galdera, j]=="") {
distantzia <- 1
} else {
distantzia <- bilbao_d(strsplit(datubasea[galdera, i], ",")[[1]], strsplit(datubasea[galdera, j], ",")[[1]])
}
pisuak <- membership[i, c] * membership[j, c]
pisuen_batura <- pisuen_batura + pisuak
batura <- batura + distantzia * pisuak
}
}
return(batura * 2 / pisuen_batura)
}
kalkulatu_estabilitatea(datubase_matrix, membership, 4, cluster1)
print(indices2)
print(i)
for (i in indices1[1:length(indices1)]){
print(i)
}
for (i in indices1[0+1:length(indices1)]){
print(i)
}
for (i in indices1[1+1:length(indices1)]){
print(i)
}
for (i in indices1[2+1:length(indices1)]){
print(i)
}
tail(indices,5)
tail(indices1,5)
tail(indices1, length(indices1)-2)
tail(indices1, length(indices1))
tail(indices1, length(indices1)-3)
for (i in indices1[tail(indices1, length(indices1)-2+1)]){
print(i)
}
kalkulatu_estabilitatea <- function(datubasea, membership, galdera, cluster) {
c <- cluster[[1]]
elementuak <- cluster[[2]]
n <- length(elementuak)
batura <- 0
pisuen_batura <- 0
for (i in elementuak) {
for (j in elementuak[i+1:n]) {
if is.na(j){
kalkulatu_estabilitatea <- function(datubasea, membership, galdera, cluster) {
c <- cluster[[1]]
elementuak <- cluster[[2]]
n <- length(elementuak)
batura <- 0
pisuen_batura <- 0
for (i in elementuak) {
for (j in elementuak[i+1:n]) {
if (is.na(j)){
break
}
print(c(i,j))
print(c(datubasea[galdera, i][1], datubasea[galdera, j]))
if (datubasea[galdera, i]=="" || datubasea[galdera, j]=="") {
distantzia <- 1
} else {
distantzia <- bilbao_d(strsplit(datubasea[galdera, i], ",")[[1]], strsplit(datubasea[galdera, j], ",")[[1]])
}
pisuak <- membership[i, c] * membership[j, c]
pisuen_batura <- pisuen_batura + pisuak
batura <- batura + distantzia * pisuak
}
}
return(batura * 2 / pisuen_batura)
}
kalkulatu_estabilitatea(datubase_matrix, membership, 4, cluster1)
kalkulatu_estabilitatea <- function(datubasea, membership, galdera, cluster) {
c <- cluster[[1]]
elementuak <- cluster[[2]]
n <- length(elementuak)
batura <- 0
pisuen_batura <- 0
for (i in elementuak) {
for (j in elementuak[i+1:n]) {
if (is.na(j)){
break
}
print(c(i,j))
#print(c(datubasea[galdera, i][1], datubasea[galdera, j]))
if (datubasea[galdera, i]=="" || datubasea[galdera, j]=="") {
distantzia <- 1
} else {
distantzia <- bilbao_d(strsplit(datubasea[galdera, i], ",")[[1]], strsplit(datubasea[galdera, j], ",")[[1]])
}
pisuak <- membership[i, c] * membership[j, c]
pisuen_batura <- pisuen_batura + pisuak
batura <- batura + distantzia * pisuak
}
}
return(batura * 2 / pisuen_batura)
}
kalkulatu_estabilitatea(datubase_matrix, membership, 4, cluster1)
kalkulatu_estabilitatea <- function(datubasea, membership, galdera, cluster) {
c <- cluster[[1]]
elementuak <- cluster[[2]]
n <- length(elementuak)
batura <- 0
pisuen_batura <- 0
for (i in elementuak) {
for (j in elementuak[i+1:n]) {
if (is.na(j)){
j <- 0
break
}
print(c(i,j))
#print(c(datubasea[galdera, i][1], datubasea[galdera, j]))
if (datubasea[galdera, i]=="" || datubasea[galdera, j]=="") {
distantzia <- 1
} else {
distantzia <- bilbao_d(strsplit(datubasea[galdera, i], ",")[[1]], strsplit(datubasea[galdera, j], ",")[[1]])
}
pisuak <- membership[i, c] * membership[j, c]
pisuen_batura <- pisuen_batura + pisuak
batura <- batura + distantzia * pisuak
}
}
return(batura * 2 / pisuen_batura)
}
kalkulatu_estabilitatea(datubase_matrix, membership, 4, cluster1)
for (i in indices1) {
for (j in indices1[i+1:length(indices1)]) {
print(c(i,j))
}
}
for (i in indices1) {
for (j in indices1[i+1:length(indices1)]) {
print(c(i,j))
if (is.na(j)){
j<-0
break
}
}
}
if (is.na(j)){
j<-0
break
}ç
for (i in indices1) {
for (j in indices1[i+1:length(indices1)]) {
if (is.na(j)){
j<-0
break
}
print(c(i,j))
}
}
indicesss <- indices1
for (i in indices1) {
for (j in indicesss[i+1:length(indices1)]) {
if (is.na(j)){
j<-0
break
}
print(c(i,j))
}
}
for (i in indices1) {
for (j in indices1[(i+1):length(indices1)]) {
if (is.na(j)){
j<-0
break
}
print(c(i,j))
}
}
for (i in indices1) {
for (j in indices1[(i+1):length(indices1)]) {
if (is.na(j)){
j<-0
break
}
print(c(i,j))
}
}
for (i in indices1) {
for (j in indices1) {
if (is.na(j)){
j<-0
break
}
print(c(i,j))
}
}
for (i in 1:lenght(indinces1)) {
for (j in 1:lenght(indinces1)) {
print(c(i,j))
}
}
for (i in 1:length(indinces1)) {
for (j in 1:length(indinces1)) {
print(c(i,j))
}
}
for (i in 1:length(indices1)) {
for (j in 1:length(indices1)) {
print(c(i,j))
}
}
for (i in 1:length(indices1)) {
for (j in (i+1):length(indices1)) {
print(c(i,j))
}
}
kalkulatu_estabilitatea <- function(datubasea, membership, galdera, cluster) {
c <- cluster[[1]]
elementuak <- cluster[[2]]
n <- length(elementuak)
batura <- 0
pisuen_batura <- 0
for (i in 1:n) {
for (j in (i+1):n) {
print(c(i,j))
p_i = elementuak[i]
p_j = elementuak[j]
#print(c(datubasea[galdera, i][1], datubasea[galdera, j]))
if (datubasea[galdera, p_i]=="" || datubasea[galdera, p_j]=="") {
distantzia <- 1
} else {
distantzia <- bilbao_d(strsplit(datubasea[galdera, p_i], ",")[[1]], strsplit(datubasea[galdera, p_j], ",")[[1]])
}
pisuak <- membership[p_i, c] * membership[p_j, c]
pisuen_batura <- pisuen_batura + pisuak
batura <- batura + distantzia * pisuak
}
}
return(batura * 2 / pisuen_batura)
}
kalkulatu_estabilitatea <- function(datubasea, membership, galdera, cluster) {
c <- cluster[[1]]
elementuak <- cluster[[2]]
n <- length(elementuak)
batura <- 0
pisuen_batura <- 0
for (i in 1:n) {
for (j in (i+1):n) {
p_i = elementuak[i]
p_j = elementuak[j]
print(c(p_i,p_j))
#print(c(datubasea[galdera, i][1], datubasea[galdera, j]))
if (datubasea[galdera, p_i]=="" || datubasea[galdera, p_j]=="") {
distantzia <- 1
} else {
distantzia <- bilbao_d(strsplit(datubasea[galdera, p_i], ",")[[1]], strsplit(datubasea[galdera, p_j], ",")[[1]])
}
pisuak <- membership[p_i, c] * membership[p_j, c]
pisuen_batura <- pisuen_batura + pisuak
batura <- batura + distantzia * pisuak
}
}
return(batura * 2 / pisuen_batura)
}
kalkulatu_estabilitatea(datubase_matrix, membership, 4, cluster1)
# setwd("/home/andoni/Downloads/Praktika Euskara Dialektoak-20241128T082756Z-001/Praktika Euskara Dialektoak")
library(cluster)
library(dict)
library(Dict)
library(dict)
library(Dict)
a <- dict()
a <- Dict$new()
